#!/bin/bash
set -eo pipefail

[[ $# -ne 2 ]] && echo "Usage: $(basename "$0") <real-file> <linked-file>" && exit 1

function list_files() { find "$1" -type f -print0 -or -type l -print0; }
function list_dirs() { find "$1" -mindepth 1 -type d -print0; }

SOURCE_PATH=$(realpath --canonicalize-missing --no-symlinks "$1")
TARGET_PATH=$(realpath --canonicalize-missing --no-symlinks "$2")

if [[ -d ${SOURCE_PATH} ]]; then
  while IFS= read -r -d '' SOURCE_SUBDIRECTORY; do
    mkdir --parents "${TARGET_PATH}${SOURCE_SUBDIRECTORY/${SOURCE_PATH}/}"
  done < <(list_dirs "$SOURCE_PATH")
  while IFS= read -r -d '' SOURCE_FILE; do
    mkdir --parents "$(dirname "${TARGET_PATH}${SOURCE_FILE/${SOURCE_PATH}/}")"
    ln --force --symbolic "${SOURCE_FILE}" "${TARGET_PATH}${SOURCE_FILE/${SOURCE_PATH}/}"
  done < <(list_files "$SOURCE_PATH")
elif [[ -f ${SOURCE_PATH} ]]; then
  if [[ -d ${TARGET_PATH} ]]; then
    ln --force --symbolic "${SOURCE_PATH}" "${TARGET_PATH}/$(basename "${SOURCE_PATH}")"
  else
    mkdir --parents "$(dirname "${TARGET_PATH}")"
    ln --force --symbolic "${SOURCE_PATH}" "${TARGET_PATH}"
  fi
else
  echo 'Error... Something went wrong!'
fi
