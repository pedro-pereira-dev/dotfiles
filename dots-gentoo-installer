#!/bin/bash
# shellcheck disable=SC2015 disable=SC2088 source=/dev/null
set -eou pipefail

# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# sources auxiliary functions
_IS_DOTS_UTILS_LOADED=""
source "$(dirname "$(readlink -f "$0")")/dots-utils" >/dev/null 2>&1 ||
  source /dev/stdin <<<"$(curl -Lfs "$_DOTS_RAW_URL/dots-utils")"
[ -z "$_IS_DOTS_UTILS_LOADED" ] && echo '[E] failed to source dots-utils' && exit 1

# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# checks required variables
[ -z "$_DOTS_DIR" ] && echo "[E] missing required variable: \$_DOTS_DIR" && exit 1
[ -z "$_DOTS_RAW_URL" ] && echo "[E] missing required variable: \$_DOTS_RAW_URL" && exit 1
[ -z "$_GENTOO_RAW_URL" ] && echo "[E] missing required variable: \$_GENTOO_RAW_URL" && exit 1

[ -z "$_BOOT" ] && echo "[E] missing required variable: \$_BOOT" && exit 1
[ -z "$_BOOT_SIZE" ] && echo "[E] missing required variable: \$_BOOT_SIZE" && exit 1
[ -z "$_DEV" ] && echo "[E] missing required variable: \$_DEV" && exit 1
[ -z "$_HOST" ] && echo "[E] missing required variable: \$_HOST" && exit 1
[ -z "$_PASSWORD" ] && echo "[E] missing required variable: \$_PASSWORD" && exit 1
[ -z "$_ROOT" ] && echo "[E] missing required variable: \$_ROOT" && exit 1
[ -z "$_ROOT_SIZE" ] && echo "[E] missing required variable: \$_ROOT_SIZE" && exit 1
[ -z "$_USER" ] && echo "[E] missing required variable: \$_USER" && exit 1

# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# deletes all partitions in the system device and creates defined layout
echo '[I] preparing devices...'
wipefs -a "$_DEV"
if [ -d '/sys/firmware/efi' ]; then
  sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' <<EOF | fdisk "$_DEV"
    g  # create empty gpt partition table
    n  # create boot partition
       # choose default partition number
       # choose default sector
    $_BOOT_SIZE
    y  # delete partition signature
    t  # choose partition type
    1  # choose efi system
    n  # create root partition
       # choose default partition number
       # choose default sector
    $_ROOT_SIZE
    y  # delete partition signature
    t  # choose partition type
       # choose default partition number
    23 # choose linux root
    p  # print partition table
    w  # write changes to disk
EOF
else
  sed -e 's/\s*\([\+0-9a-zA-Z]*\).*/\1/' <<EOF | fdisk "$_DEV"
    o  # create empty mbr partition table
    n  # create boot partition
       # choose default partition type
       # choose default partition number
       # choose default sector number
    $_BOOT_SIZE
    a  # mark partition as bootable
    n  # create root partition
       # choose default partition type
       # choose default partition number
       # choose default sector number
    $_ROOT_SIZE
    p  # print partition table
    w  # write changes to disk
EOF
fi

# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# installs gentoo on the system device
curl -Lfs "$_GENTOO_RAW_URL/install.sh" | bash -s -- \
  --boot "$_BOOT" \
  --hostname "$_HOST" \
  --keymap 'pt-latin9' \
  --password "$_PASSWORD" \
  --root "$_ROOT" \
  --timezone 'Europe/Lisbon'

# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# creates user account and sets up system
chroot /mnt /bin/bash <<EOF
env-update && source /etc/profile
useradd -m -G wheel -s /bin/bash "$_USER"
echo "$_USER:$_PASSWORD" | chpasswd
emerge --ask=n --noreplace dev-vcs/git
curl -Lfs "$_DOTS_RAW_URL/dots" | bash -s -- update
/home/$_USER/$_DOTS_DIR/dots sync
EOF
