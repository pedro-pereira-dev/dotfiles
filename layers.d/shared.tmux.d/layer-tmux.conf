set-hook -g session-created "send-keys 'command -v nvim-reloadable && tmux rename-window nvim && nvim-reloadable || true' ENTER"

# tmux / neovim integration
set -ag terminal-overrides ",xterm-256color:RGB" # for italics
set -g default-terminal "tmux-256color" # for colors
set -sg escape-time 0 # vim escape press delay
# mouse support
set -g mouse on
set -g history-limit 50000
# numeric windows
set -g base-index 1
setw -g pane-base-index 1

# status bar layout
set -g status-left ''
set -g status-position 'top'
set -g status-right '#[align=right]#([[ -n $(tmux show-option -qv key-table) ]] && echo "#[fg=brightred]󰹋 ")#([[ -n $(tmux show-env | grep ^SSH_CONNECTION=) ]] && echo "#[fg=brightblack,nobold]$(whoami)@#h#[fg=white]  ")  #[fg=white,bold]#S'
# status bar appearance
set -g status-style 'bg=default fg=white,bold'
set -g mode-style 'bg=default,fg=white,bold'
set -g window-status-format '#[fg=brightblack,nobold]#I #W  '
set -g window-status-current-format '#I #W  '

# default keybindings - https://gist.github.com/mzmonsour/8791835
bind-key -n m-D run-shell "tmux detach-client"
bind-key -n m-R run-shell "tmux source-file ~/.config/tmux/tmux.conf"
bind-key -n m-r run-shell "tmux neww code"
# create windows - alt + pt
bind-key -n m-p run-shell "tmux split-window -h"
bind-key -n m-P run-shell "tmux split-window -v"
bind-key -n m-t run-shell "tmux new-window"
# select tabs - alt + #
bind-key -n m-1 if-shell "tmux select-window -t :1" '' "new-window -t :1"
bind-key -n m-2 if-shell "tmux select-window -t :2" '' "new-window -t :2"
bind-key -n m-3 if-shell "tmux select-window -t :3" '' "new-window -t :3"
bind-key -n m-4 if-shell "tmux select-window -t :4" '' "new-window -t :4"
bind-key -n m-5 if-shell "tmux select-window -t :5" '' "new-window -t :5"
bind-key -n m-6 if-shell "tmux select-window -t :6" '' "new-window -t :6"
bind-key -n m-7 if-shell "tmux select-window -t :7" '' "new-window -t :7"
bind-key -n m-8 if-shell "tmux select-window -t :8" '' "new-window -t :8"
bind-key -n m-9 if-shell "tmux select-window -t :9" '' "new-window -t :9"
bind-key -n m-0 if-shell "tmux select-window -t :0" '' "new-window -t :0"
# rename windows - alt + shift + pts
bind-key -n m-T run-shell "tmux command-prompt -I 'rename-window '"
bind-key -n m-S run-shell "tmux command-prompt -I 'rename-session '"
# resize panes - alt + shift + hjkl
bind-key -n m-H run-shell "tmux resize-pane -L"
bind-key -n m-J run-shell "tmux resize-pane -D"
bind-key -n m-K run-shell "tmux resize-pane -U"
bind-key -n m-L run-shell "tmux resize-pane -R"
# disables bindings to use with nested sessions
bind-key -T off m-Escape run-shell "tmux set -u prefix ; tmux set -u key-table ; tmux refresh-client -S"
bind-key -T root m-Escape run-shell "tmux set prefix None ; tmux set key-table off ; tmux refresh-client -S"

# integrates tmux and neovim navigation
# https://github.com/christoomey/vim-tmux-navigator/
vim_pattern='(\S+/)?g?\.?(view|l?n?vim?x?|fzf)(diff)?(-wrapped)?'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep --extended-regexp --ignore-case --quiet '^[^TXZ ]+ +${vim_pattern}'"
# navigates panes - alt + hjkl
bind-key -n 'm-h' if-shell "$is_vim" 'send-keys m-h' 'select-pane -L'
bind-key -n 'm-j' if-shell "$is_vim" 'send-keys m-j' 'select-pane -D'
bind-key -n 'm-k' if-shell "$is_vim" 'send-keys m-k' 'select-pane -U'
bind-key -n 'm-l' if-shell "$is_vim" 'send-keys m-l' 'select-pane -R'
# kills panes - alt + qQ
bind-key -n 'm-Q' if-shell "$is_vim" 'send-keys m-Q' 'kill-session'
bind-key -n 'm-q' if-shell "$is_vim" 'send-keys m-q' 'kill-pane'
