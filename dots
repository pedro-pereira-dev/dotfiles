#!/bin/bash
# shellcheck disable=SC2015 disable=SC2088 source=/dev/null
set -eou pipefail

# constants
export _DOTS_DIR='workspace/personal/dotfiles'
export _DOTS_RAW_URL='https://raw.githubusercontent.com/pedro-pereira-dev/dotfiles/refs/heads/main'
export _DOTS_URL='https://github.com/pedro-pereira-dev/dotfiles.git'
export _HOMEBREW_URL='https://raw.githubusercontent.com/homebrew/install/refs/heads/main'

# ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
# sources auxiliary functions
which dots-utils >/dev/null 2>&1 &&
  source "$(which dots-utils)" ||
  source "$(dirname "$(readlink -f "$0")")/dots-utils" >/dev/null 2>&1 ||
  source /dev/stdin <<<"$(curl -Lfs "$_DOTS_RAW_URL/dots-utils")"
[ -z "$_IS_DOTS_UTILS_LOADED" ] && echo '[E] failed to source dots-utils' && exit 1

function _main() {
  case $1 in

  # ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  # installs required software and clones dotfiles
  bootstrap)
    _HOME="$(get_home "$@")" && _USER="$(get_user "$@")" ||
      (echo '[E] missing required argument: --username' && return 1)

    test "$(uname)" == 'Darwin' && ! check_command brew &&
      curl -Lfs "$_HOMEBREW_URL/install.sh" |
      NONINTERACTIVE=1 run_as_user "$_USER" bash &&
      export PATH="/opt/homebrew/bin:$PATH"

    ! check_command git && (
      check_command brew && run_as_user "$_USER" brew install git
      check_command emerge && ! check_command git && run_as_root emerge --ask=n --noreplace dev-vcs/git
    )

    ! test -d "$_HOME/$_DOTS_DIR/.git" && (
      run_as_user "$_USER" rm -fr "$_HOME/$_DOTS_DIR"
      run_as_user "$_USER" mkdir -p "$(dirname "$_HOME/$_DOTS_DIR")"
      run_as_user "$_USER" git clone $_DOTS_URL "$_HOME/$_DOTS_DIR"
    )

    return 0
    ;;

  # ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  # sets up live iso system and runs custom gentoo installation script
  install)
    _HOST="$(get_option "--hostname" "$@")" || true
    [[ -z "$_HOST" ]] && echo '[E] missing required argument: --hostname' && return 1

    ! curl -ILs "$_DOTS_RAW_URL/installers/$_HOST" &&
      echo "[E] unknow hostname to install gentoo to ($_HOST)" && return 1
    curl -Lfs "$_DOTS_RAW_URL/installers/$_HOST" | bash

    return 0
    ;;

  # ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  # clears deprecated files and directories, and updates the dotfiles repository
  update)
    _main bootstrap

    _HOME="$(get_home "$@")" && _USER="$(get_user "$@")" ||
      (echo '[E] missing required argument: --username' && return 1)

    cd "$_HOME/$_DOTS_DIR"
    run_as_user "$_USER" git fetch origin
    run_as_user "$_USER" git reset --hard origin/main
    run_as_user "$_USER" git clean -dfqx

    return 0
    ;;

  # ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  # clears setup and applies dotfiles to system
  sync)
    _main update

    _HOME="$(get_home "$@")" && _HOST="$(get_hostname)" ||
      (echo '[E] missing required argument: --username' && return 1)

    bash "$_HOME/$_DOTS_DIR/hosts/$_HOST"

    return 0
    ;;

  # ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  # handles unknown commands
  *)
    [[ -n "$1" ]] && echo "[E] unknown command ($1)"
    [[ -z "$1" ]] && echo -e "\
dots: command-line interface for managing dotfiles and gentoo systems installations
Usage:
  dots bootstrap  [ --username <username> ]                           >> installs git and clones dotfiles repository
  dots install      --hostname <hostname>                             >> installs gentoo on the target system 'hostname'
  dots update     [ --username <username> ]                           >> clears and updates the dotfiles directory
  dots sync       [ --hostname <hostname> ] [ --username <username> ] >> clears setup and applies dotfiles to system
"
    return 1
    ;;

  esac
}
_main "$@"
