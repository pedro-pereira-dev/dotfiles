#!/bin/bash

# checks arguments, prints usage and prepares variables
[[ $# -gt 1 ]] && echo 'Usage: edeclare [--unsupervised]' && exit 1
[[ $1 == '--unsupervised' ]] && UNSUPERVISED=$1

# defines flags checking functions
function is_unsupervised() { [[ ! -z ${UNSUPERVISED} ]] && return 0 || return 1; }

# defines permissions handling functions
function is_root() { [[ ${EUID} -eq 0 ]] && return 0 || return 1; }
function run_as_root() { if is_root; then ${@:2}; else ${@:1}; fi; }

# defines requirements checking functions
function check_command() { for CHECK_DEP in $@; do [[ -z $(command -v ${CHECK_DEP}) ]] && echo "Missing command: ${CHECK_DEP}" && exit 1; done; }

# defines portage functions
function get_installed_with_portage() { cat /var/lib/portage/world; }
function get_declared_with_portage() { cat /etc/portage/package.declare | sed -E '/^[[:blank:]]*(#|$)/d; s/#.*//' | sed -E 's/[[:space:]]*$//'; }
function get_dependencies_with_portage() { echo $(get_installed_with_portage) $(get_declared_with_portage) | tr ' ' '\n' | sort | uniq; }
function is_installed_with_portage() { [[ ! -z $(get_installed_with_portage | grep -E "^${1}$") ]] && return 0 || return 1; }
function is_declared_with_portage() { [[ ! -z $(get_declared_with_portage | grep -E "^${1}$") ]] && return 0 || return 1; }
function install_with_portage() { run_as_root doas emerge $1 ${@:2}; }
function remove_with_portage() { run_as_root doas emerge $1 --deselect ${@:2}; }

# checks required dependencies
check_command doas emerge
[[ ! -f '/etc/portage/package.declare' ]] && echo 'Missing file /etc/portage/package.declare' && exit 1
# iterates all dependencies for installation or removal
for DEP in $(get_dependencies_with_portage); do
  # marks package for installation if not installed but declared
  if ! is_installed_with_portage ${DEP} && is_declared_with_portage ${DEP}; then
    INSTALL+=(${DEP})
    # marks package for removal if installed but not declared
  elif is_installed_with_portage ${DEP} && ! is_declared_with_portage ${DEP}; then
    REMOVE+=(${DEP})
  fi
done
# installs or removes all marked packages
if [[ ${#INSTALL[@]} -ne 0 ]]; then is_unsupervised && install_with_portage --ask=n ${INSTALL[@]} || install_with_portage --ask ${INSTALL[@]}; fi
if [[ ${#REMOVE[@]} -ne 0 ]]; then is_unsupervised && remove_with_portage --ask=n ${REMOVE[@]} || remove_with_portage --ask ${REMOVE[@]}; fi
